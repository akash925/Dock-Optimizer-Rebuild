Fixing Module Visibility and Dynamic Toggling (Frontend & Backend)
Issue: Currently, even when modules are enabled in the Admin Console, many modules (like Calendar, Asset Manager, Booking Pages, etc.) are not appearing in the organization's dashboard or navigation, despite being toggled ON.

We must achieve the following functionality clearly:

1. Admin Console:

When a super-admin enables or disables modules for an organization, it should immediately affect the organization's user views.

All modules toggled "ON" must appear clearly in the navigation and be fully functional.

All modules toggled "OFF" must be completely hidden from navigation and routes, NOT just blocked via an authorization guard.

2. Frontend (React/UI):

Update the UI logic that populates the left-hand sidebar and dashboard navigation to directly reflect the organization’s enabled modules.

Do NOT show the modules that are toggled OFF in the navigation at all.

Correctly fetch and check enabled modules from the backend at user login (on initial app load) and after module changes.

Clearly handle the scenario of dynamic toggling, ensuring modules can appear or disappear without requiring page reloads or causing frontend runtime errors.

3. Backend (API logic):

Verify the API endpoint (GET /api/orgs/:orgId/modules) returns the current accurate list of active modules for the organization.

Ensure toggling endpoints (POST/PUT /api/admin/orgs/:orgId/modules/:moduleName) correctly save and reflect the organization’s enabled modules list.

4. General reliability and logging:

Include meaningful logging for module toggle operations (which module, what action, timestamp, organization).

Ensure correct type handling and error handling to prevent runtime errors such as:

makefile
Copy
Edit
Warning: Maximum update depth exceeded...
This specific error indicates improper dependency handling in a useEffect hook causing infinite re-renders. Fix this clearly and thoroughly.

Implementation Steps:
Confirm correct retrieval/storage of organization modules from DB.

Fix React Query/hooks to reliably fetch and update module state.

Ensure the React side (navigation/sidebar components) respects the enabled modules state correctly.

Avoid infinite loops in React useEffect. Ensure correct dependency arrays to avoid re-rendering loops.

Confirm toggling modules live-updates visibility immediately for users.

Please include clear feedback about:

Which endpoints/files you adjusted.

How you're handling dynamic module state on the frontend.

How you solved the infinite rendering loop issue clearly (mention dependency corrections).

How the API and frontend synchronize clearly.

Completion Criteria:
When a module is enabled: It immediately appears in the user's sidebar/navigation.

When a module is disabled: It immediately disappears entirely from sidebar/navigation.

No runtime or React warnings appear.

Modules match exactly what's shown as enabled in Admin Console, always.