Context:
  After the last patch, both internal and external booking still fail:
    • Internal: “Invalid time value” at `unified-appointment-form.tsx:1172`, now in a block using `timeDate.setHours(hour, minute, 0)`.
    • External: still shows “No Available Times” because `availableTimeSlots` never populates.

Goal:
  Diagnose and fix both bugs in one go so:
    1. The time formatter never runs on invalid values.
    2. The availability lookup on the public wizard uses the same helper and populates `availableTimeSlots` correctly.

Tasks:

1. **Guard the time formatter**  
   - Surround *every* call to `format(timeDate, 'h:mm a')` with a guard:  
     ```ts
     const t = field.value;
     if (!t || typeof t !== 'string' || !/^\d{2}:\d{2}$/.test(t)) {
       return '—';
     }
     const [hour, minute] = t.split(':').map(Number);
     const timeDate = new Date();
     timeDate.setHours(hour, minute, 0, 0);
     return format(timeDate, 'h:mm a');
     ```
   - Remove any other formatting branches that lack this check.

2. **Unify availability fetching**  
   - In the external flow’s `useEffect` or wherever date changes, import the *same* internal helper:  
     ```ts
     import { generateAvailableTimeSlots } from '@/lib/appointment-availability';
     ```
   - Call it with exactly the same args:  
     ```ts
     const slots = generateAvailableTimeSlots(
       scheduleDetailsForm.getValues('appointmentDate'),
       availabilityRules,
       selectedAppointmentType?.duration || defaultDuration,
       facilityTimezone,
       15
     );
     setAvailableTimeSlots(slots);
     ```
   - Ensure you await or `.then(...)` on the import before calling it.

3. **Instrument & log**  
   - Add `console.log` before fetching availability:
     ```ts
     console.log('Fetching slots for', {
       date: scheduleDetailsForm.getValues('appointmentDate'),
       typeId: appointmentTypeId,
       facilityId: selectedFacilityId,
       timezone: facilityTimezone
     });
     ```
   - Add a similar log inside the catch to surface any errors.

4. **Fallback slot list**  
   - If `availabilityRules` is empty or `slots` is empty but the API returned rules, default to showing *all* quarter‑hour slots (so the user can at least pick something).

5. **Tests**  
   - **Unit**: Pass `''`, `'foo'`, and `'14:30'` into your formatter function and assert you get `'—'`, `'—'`, and a valid formatted string.  
   - **Integration**: In the external wizard E2E test, select a date known to have slots (seeded), assert the dropdown shows at least one `<SelectItem>`.

Commit as one checkpoint so we can immediately verify both flows are stable and show correct time and availability.  
