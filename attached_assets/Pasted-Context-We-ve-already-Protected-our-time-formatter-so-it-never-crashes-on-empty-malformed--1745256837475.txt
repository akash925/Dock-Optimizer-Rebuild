Context:
  We’ve already:
    • Protected our time‐formatter so it never crashes on empty/malformed values.
    • Wired up the external wizard to call `generateAvailableTimeSlots()`, so we now see every 15‑min slot.

But two key bugs remain:
  1. **Internal** “Create New Appointment” dialog still doesn’t persist the chosen date/time into the form state—on submit it comes back blank.
  2. **External** flow shows every slot as “available,” but it’s ignoring each Appointment Master’s:
     - maxConcurrent (per‐slot capacity)
     - maxPerDay (daily limit)
     - buffer between appointments
     - break times
     - “show remaining slots” toggle

Goal:
  1. Internal form must lock chosen date/time into its React Hook Form state so on final submit it’s sent to the API.
  2. External wizard must filter & label slots as follows:
     - **available** if concurrent < maxConcurrent **and** total booked for that day < maxPerDay.
     - **disabled** if it would exceed either limit or if it falls in a break.
     - If “show remaining slots” is on, annotate each slot button with “(n left)”.
     - Respect buffer + grace windows so you can’t book too close to existing ones.

Tasks:
1. **Internal state fix**  
   - In `UnifiedAppointmentForm`, ensure the date‐picker’s `onChange` sets `scheduleDetailsForm.setValue('appointmentDate',…)` and that the time‐picker’s value is bound and submitted. Audit form reset logic so it doesn’t wipe these fields on step transitions.
2. **Fetch live counts**  
   - Add a query to `/api/schedules?date=YYYY-MM-DD&typeId=&facilityId=` before rendering slots, returning existing appointments times.  
   - Compute, for each slot, how many are already booked (concurrent) and how many total that day.
3. **Slot availability logic**  
   - In your shared hook (or in `generateAvailableTimeSlots`), inject:
     ```ts
     slot.available = 
       validation.valid /* time‐window check */ &&
       bookedConcurrent < rule.maxConcurrent &&
       totalForDay < rule.maxPerDay;
     slot.remaining = rule.maxConcurrent - bookedConcurrent;
     ```
   - Also mark any slot within `buffer` of an existing appointment as unavailable.
4. **UI annotations**  
   - Internal: time dropdown shows “—” guard, now will show real slots with counts.
   - External: render slots as `<button disabled={!slot.available}>8:00 AM {showRemaining && slot.remaining>0 ? `(${slot.remaining} left)` : ''}</button>`.
5. **Tests**  
   - Unit: stub `/api/schedules` to return a few appointments, generate slots, assert correct `available` flags and `remaining` counts.  
   - E2E: book up to maxConcurrent in one slot → assert that next attempt disables that slot; book more days → assert daily cap disables all slots.

Bundle these changes into one PR so that **both** internal and external booking flows fully honor each Appointment Master’s capacity, buffer, break, and display settings. 
