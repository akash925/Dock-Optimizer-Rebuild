Objective:
Fix and finalize the dynamic appointment booking flow. Ensure all user-configurable fields are rendered and validated based on admin settings. Confirm that submitted data appears correctly throughout the platform (confirmation screen, calendar, emails, logs). Eliminate all hardcoded fallback values (e.g., FedEx).

Primary Code Areas:

client/src/pages/external-booking.tsx — public-facing booking flow

client/src/components/bookings/form-builder.tsx — renders form inputs dynamically from config

client/src/components/bookings/confirmation-screen.tsx — post-booking view

client/src/components/schedules/appointment-details-dialog.tsx — internal view/edit modal

client/src/components/calendar/calendar-event.tsx — calendar slot summary

client/src/components/logs/appointment-log.tsx — admin logs

server/routes/appointments.ts — handles POST + PATCH

@shared/schema — Schedule + FormConfig types

Key Technical Requirements:

Form Field Rendering:

Pull fields from appointmentFormConfig (custom per facility/tenant).

Show only questions marked included: true.

Enforce isRequired: true during form submission.

Static Required Fields:

customerName and email must always be required, even if not present in config.

Allow user to type a customer name (this is the calendar/event title).

Form Data Storage:

Store dynamic answers in appointment.customFormData (JSON).

Normalize field names to camelCase if needed.

Standard fields (e.g., driverName, truckNumber) can also be stored flat on the appointment.

Confirmation Page + Email:

Pull submitted data from customFormData and core fields.

Do not assume any field is always present.

If a field was submitted, show it. If not, skip.

Appointment Log + Calendar:

Only show relevant info based on what was collected for each appointment.

Do not default carrierName to FedEx — if no value submitted, show "Not provided".

Title should use customerName if available.

Appointment Details Dialog:

Ensure all submitted values show up in the view.

Uploaded files (e.g., BOLs, photos) should appear correctly via bolDocuments or customFormData.

Critical Bugs to Fix:

Carrier name is defaulting to FedEx — remove any default value in UI/DB schema.

Required fields like customerName are not being enforced reliably.

Uploaded files are not always appearing post-booking — verify file saving + linking to appointment.

Design Intent:

This system allows tenant admins to configure their own required fields.

The UI should flexibly reflect these fields without needing code updates.

Event summaries, booking confirmations, and emails must adapt to the fields submitted per appointment.

Deployment Notes:

Feature flag: ENABLE_DYNAMIC_BOOKING_FORM

Data saved via: POST /api/schedules

Files uploaded via: POST /api/upload/bol

Email sent via: sendAppointmentConfirmationEmail(appointment) in server

Ensure all tests pass (client/tests/booking.test.tsx and server/tests/appointments.test.ts).