// PATCH: Fix controller .toString crash, add debug logging, and stabilize time slot rendering

// In ServiceSelectionStep, update facilityId field render:
<FormField
  control={form.control}
  name="facilityId"
  render={({ field }) => (
    <FormItem className="booking-form-field">
      <FormLabel className="booking-label">Facility</FormLabel>
      <Select 
        onValueChange={(value) => field.onChange(Number(value))}
        value={field.value != null ? field.value.toString() : ""}
      >
        <FormControl>
          <SelectTrigger className="booking-select">
            <SelectValue placeholder="Select a facility" />
          </SelectTrigger>
        </FormControl>
        <SelectContent>
          {facilities.map((facility: any) => (
            <SelectItem 
              key={facility.id} 
              value={facility.id.toString()}
            >
              {facility.name}
            </SelectItem>
          ))}
        </SelectContent>
      </Select>
      <FormMessage />
    </FormItem>
  )}
/>

// In ServiceSelectionStep, update appointmentTypeId field render:
<FormField
  control={form.control}
  name="appointmentTypeId"
  render={({ field }) => (
    <FormItem className="booking-form-field">
      <FormLabel className="booking-label">Service Type</FormLabel>
      <Select 
        onValueChange={(value) => field.onChange(Number(value))}
        value={field.value != null ? field.value.toString() : ""}
        disabled={!form.watch('facilityId')}
      >
        <FormControl>
          <SelectTrigger className="booking-select">
            <SelectValue placeholder={form.watch('facilityId') ? "Select a service type" : "Please select a facility first"} />
          </SelectTrigger>
        </FormControl>
        <SelectContent>
          {appointmentTypes.map((type: any) => (
            <SelectItem 
              key={type.id} 
              value={type.id.toString()}
            >
              {type.name}
            </SelectItem>
          ))}
        </SelectContent>
      </Select>
      <FormMessage />
    </FormItem>
  )}
/>

// Add this to the bottom of ServiceSelectionStep for debugging:
{process.env.NODE_ENV === 'development' && (
  <pre className="text-xs bg-muted p-2 mt-4 rounded">
    {JSON.stringify(form.watch(), null, 2)}
  </pre>
)}

// In DateTimeSelectionStep, log slot data:
useEffect(() => {
  if (bookingData.date) {
    form.setValue('date', bookingData.date);
    handleDateChange(bookingData.date);
  }
  if (bookingData.time) {
    form.setValue('time', bookingData.time);
  }
}, [bookingData.date, bookingData.time]);

// In handleDateChange, log slot result:
const data = await response.json();
console.log("[DEBUG] Received time slots:", data);

// ADD: Recommendation Prompt (external to code)
/*
PROMPT FOR AGENT:
Please remove outdated or duplicate booking pages such as `external-booking-fixed.tsx`, `external-booking-v2.tsx`, or anything that is not `external-booking-fixed-v2.tsx`. Ensure all booking page routes point to and use `external-booking-fixed-v2.tsx` consistently across the codebase (including router and preview links). Remove confusion by consolidating to a single stable entry point.
*/
