name: Deploy Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    environment: test
    env:
      DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type checking
        run: pnpm typecheck

      - name: Run linting
        run: pnpm lint

      - name: Run DB migrations & seeds
        run: |
          pnpm db:migrate
          pnpm ts-node server/seeds/20250623_us_holidays.ts

      - name: Run tests
        run: pnpm test

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run DB migrations & seeds
        run: |
          echo "🚀 Running database migrations..."
          pnpm db:migrate
          if [ $? -ne 0 ]; then
            echo "❌ Database migration failed"
            exit 1
          fi
          
          echo "🌱 Running holiday seed script..."
          pnpm ts-node server/seeds/20250623_us_holidays.ts
          if [ $? -ne 0 ]; then
            echo "❌ Holiday seeding failed"
            exit 1
          fi
          
          echo "✅ Database setup completed successfully"

      - name: Build application
        run: pnpm build

      - name: Deploy to production
        run: |
          echo "🚀 Deploying application..."
          # Add your deployment commands here
          # For example: rsync, docker push, etc.
          echo "✅ Deployment completed"

  smoke-test:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      APP_URL: ${{ secrets.APP_URL || 'http://localhost:3000' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Verify database holiday data
        run: |
          echo "🔍 Verifying organization holidays table has data..."
          pnpm ts-node -e "
            import { drizzle } from 'drizzle-orm/neon-http';
            import { neon } from '@neondatabase/serverless';
            import { organizationHolidays } from './shared/schema';
            import { count } from 'drizzle-orm';
            
            const sql = neon(process.env.DATABASE_URL);
            const db = drizzle(sql);
            
            (async () => {
              try {
                const result = await db.select({ count: count() }).from(organizationHolidays);
                const holidayCount = result[0].count;
                console.log(\`Found \${holidayCount} holiday records in database\`);
                
                if (holidayCount === 0) {
                  console.error('❌ No holiday records found in database');
                  process.exit(1);
                }
                
                console.log('✅ Holiday data verification passed');
              } catch (error) {
                console.error('❌ Database verification failed:', error);
                process.exit(1);
              }
            })();
          "

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [test, deploy, smoke-test]
    if: always()
    
    steps:
      - name: Deployment Success
        if: needs.deploy.result == 'success' && needs.smoke-test.result == 'success'
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "✅ Database migrations applied"
          echo "✅ Holiday data seeded"
          echo "✅ Application deployed"
          echo "✅ Smoke tests passed"

      - name: Deployment Failure
        if: needs.test.result == 'failure' || needs.deploy.result == 'failure' || needs.smoke-test.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "Test result: ${{ needs.test.result }}"
          echo "Deploy result: ${{ needs.deploy.result }}"
          echo "Smoke test result: ${{ needs.smoke-test.result }}"
          exit 1 